@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime

<MudThemeProvider Theme="_posTheme" />  <!-- Keep this line -->

<MudPaper Class="vertical-navbar" Elevation="4" 
          Style="@NavBarWidthStyle" @onmouseleave="() => HideNav()">
    <nav aria-label="Main Navigation" class="nav-content">
        <MudIconButton Icon="@Icons.Material.Filled.Menu"
                       Color="Color.Primary"
                       Style="margin-bottom:1rem;"
                       OnClick="ToggleNav"
                       AriaLabel="Toggle navigation" @onmouseenter="() => ShowNav()"  />
        <ul class="nav-list">
            <li @onclick="@(() => NavigateTo(""))"><MudIcon Icon="@Icons.Material.Filled.Home" /><span class="nav-text">Home</span></li>
            <li><MudIcon Icon="@Icons.Material.Filled.Dashboard" /><span class="nav-text">Dashboard</span></li>
            <li><MudIcon Icon="@Icons.Material.Filled.ShoppingCart" /><span class="nav-text">Orders</span></li>
            <li><MudIcon Icon="@Icons.Material.Filled.Settings" /><span class="nav-text">Settings</span></li>
            <li><MudIcon Icon="@Icons.Material.Filled.HelpOutline" /><span class="nav-text">Help</span></li>
            <li @onclick="@(() => NavigateTo("sync"))"><MudIcon Icon="@Icons.Material.Filled.Sync" /><span class="nav-text">Load Data</span></li>
            <li @onclick="@(() => NavigateTo("tables"))"><MudIcon Icon="@Icons.Material.Filled.TableRestaurant" /><span class="nav-text">Tables</span></li>
            <li @onclick="@(() => NavigateTo("kot"))"><MudIcon Icon="@Icons.Material.Filled.RestaurantMenu" /><span class="nav-text">KOT</span></li>
            <li @onclick="@(() => NavigateTo("stocktransfer"))"><MudIcon Icon="@Icons.Material.Filled.ImportExport" /><span class="nav-text">Stock Transfer</span></li>

            
        </ul>
    </nav>
</MudPaper>

<div style="width:100vw; height:100vh; margin:0; padding:0; overflow:hidden;">
    @Body
</div>


@code {

    [Inject] NavigationManager Nav { get; set; }

    void NavigateTo(string path)
    {
        Nav.NavigateTo("/" + path);
    }


    private IJSObjectReference jsModule;
    private bool IsNavVisible = false;
    private void ShowNav() => IsNavVisible = true;
    private void HideNav() => IsNavVisible = false;
    private void ToggleNav() => IsNavVisible = !IsNavVisible;
    private string NavBarWidthStyle => $"width: {(IsNavVisible ? "240px" : "40px")};";


    private MudTheme _posTheme = new MudTheme()
    {
        PaletteLight = new PaletteLight()
        {
            Primary = "#66BB6A",        // Soft Leaf Green — good for branding & buttons
            Secondary = "#81C784",      // Medium Mint — complementary to primary
            Tertiary = "#C8E6C9",       // Light Mint — great for accents/highlights
            AppbarBackground = "#66BB6A", // Darker Green — good contrast for top bar
            DrawerBackground = "#E8F5E9", // Pale Green — subtle drawer background
            Success = "#43A047",        // Strong Green — for success messages
            Background = "#F9FFF9",     // Almost-white green tint — body background
            Surface = "#FFFFFF",        // Panels/cards stay white
            TextPrimary = "#1B5E20",    // Dark Green — ensures readability
            TextSecondary = "#4E704F",  // Muted Green-Gray — for subtle text
        },
        LayoutProperties = new LayoutProperties()
        {
            AppbarHeight = "64px",
            DrawerWidthLeft = "70px", // Only left drawer width specified
            DefaultBorderRadius = "4px"
        }
    };

}
