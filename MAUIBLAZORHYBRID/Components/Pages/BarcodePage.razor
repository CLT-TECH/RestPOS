@page "/barcodetry"
@using SharpHook.Data
@using System.Diagnostics
@inject IKeyboardListenerService KeyboardListener
@implements IDisposable

<h3>🔑 Keyboard Listener Test</h3>

<div class="test-panel">
    <p><strong>Last Key:</strong> @lastKey</p>
    <p><strong>Detected Combo:</strong> @combo</p>
    <p><strong>Barcode:</strong> @barcode</p>
</div>

<ul>
    @foreach (var evt in keyEvents.Take(10))
    {
        <li>@($"{evt.Timestamp:T} - {evt.KeyName} ({evt.EventType})")</li>
    }
</ul>

@code {
    private string lastKey = "";
    private string combo = "";
    private string barcode = "";
    private List<Services.Interfaces.KeyboardEventData> keyEvents = new();

    protected override void OnInitialized()
    {
        KeyboardListener.StartListening();

        KeyboardListener.KeyEvents.Subscribe(evt =>
        {
            lastKey = evt.KeyName;
            keyEvents.Insert(0, evt);
            combo = DetectCombo(evt);

            switch (combo)
            {
                case "Ctrl + S":
                    Debug.WriteLine("Saved");
                    break;
                case "F1":
                    Debug.WriteLine("F1");
                    break;
                case "F2":
                    Debug.WriteLine("F2");
                    break;
                default:
                    Debug.WriteLine("Everything else");
                    break;
            }


            InvokeAsync(StateHasChanged);
        });

        KeyboardListener.BarcodeStream.Subscribe(code =>
        {
            
            
            barcode = code;

            Debug.WriteLine(barcode);


            InvokeAsync(StateHasChanged);
        });
    }

    private string DetectCombo(Services.Interfaces.KeyboardEventData evt)
    {
        if (evt.EventType != EventType.KeyPressed) return "";

        return evt.KeyCode switch
        {
            KeyCode.VcF1 => "F1",
            KeyCode.VcF2 => "F2",
            KeyCode.VcF3 => "F3",
            KeyCode.VcF4 => "F4",
            KeyCode.VcF5 => "F5",
            KeyCode.VcF6 => "F6",
            KeyCode.VcF7 => "F7",
            KeyCode.VcF8 => "F8",
            KeyCode.VcF9 => "F9",
            KeyCode.VcF10 => "F10",
            KeyCode.VcF11 => "F11",
            KeyCode.VcF12 => "F12",
            KeyCode.VcS when evt.IsCtrlPressed => "Ctrl + S",
            KeyCode.VcEnter when evt.IsCtrlPressed => "Ctrl + Enter",
            KeyCode.VcDelete when evt.IsCtrlPressed => "Ctrl + Delete",
            KeyCode.VcEquals => "+",
            KeyCode.VcMinus => "-",
            _ => ""
        };
    }

    public void Dispose()
    {
       KeyboardListener.StopListening();
    }
}
