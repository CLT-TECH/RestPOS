// <auto-generated />
using System;
using MAUIBLAZORHYBRID.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MAUIBLAZORHYBRID.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250901093652_billcashierfielddelete")]
    partial class billcashierfielddelete
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.14");

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.BarItem", b =>
                {
                    b.Property<int>("BarItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BarItemBaseUnitId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BarItemCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("BarItemInventoryUnitId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BarItemName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MainBarItem")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MainBarItemID")
                        .HasColumnType("INTEGER");

                    b.HasKey("BarItemId");

                    b.ToTable("BarItems");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.BarItemStockCounter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BarItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CounterId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Stock")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BarItemId");

                    b.HasIndex("CounterId");

                    b.ToTable("BarItemCounterStocks");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.BarItemStockGodown", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BarItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GodownId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Stock")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BarItemId");

                    b.ToTable("BarItemGodownStocks");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.BillCashier", b =>
                {
                    b.Property<int>("BillCashierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("HotBillId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PaymentMode")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("TEXT");

                    b.HasKey("BillCashierId");

                    b.HasIndex("HotBillId");

                    b.ToTable("BillCashiers");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.BillItem", b =>
                {
                    b.Property<int>("itemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CatId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("categorycatId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("itemName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("itemType")
                        .HasColumnType("INTEGER");

                    b.HasKey("itemId");

                    b.HasIndex("categorycatId");

                    b.ToTable("BillItems");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.BillItemUnit", b =>
                {
                    b.Property<int>("itemUnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("itemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("unitId")
                        .HasColumnType("INTEGER");

                    b.HasKey("itemUnitId");

                    b.HasIndex("itemId");

                    b.HasIndex("unitId");

                    b.ToTable("BillItemUnits");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.BillStation", b =>
                {
                    b.Property<int>("billStationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("billStationName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("branchId")
                        .HasColumnType("INTEGER");

                    b.HasKey("billStationId");

                    b.HasIndex("branchId");

                    b.ToTable("BillStations");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.BranchMaster", b =>
                {
                    b.Property<int>("branchId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CounterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GodownId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("branchName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("branchId");

                    b.ToTable("BranchMasters");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.BranchTaxSetting", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BillingType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BranchId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TaxId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TaxPer")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("BranchId");

                    b.ToTable("BranchTaxSettings");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.Category", b =>
                {
                    b.Property<int>("catId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("catName")
                        .HasColumnType("TEXT");

                    b.Property<int>("catType")
                        .HasColumnType("INTEGER");

                    b.HasKey("catId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.DiningSpace", b =>
                {
                    b.Property<int>("diningSpaceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("diningSpaceName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("diningSpaceId");

                    b.ToTable("DiningSpaces");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.DiningSpaceItemRate", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("diningSpaceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("itemId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("itemRate")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("diningSpaceId");

                    b.HasIndex("itemId");

                    b.ToTable("DiningSpaceItemRates");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.HOTKotBilled", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("HOTKotBillID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HotKOTId")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("HotKOTId");

                    b.ToTable("HOTKotBilleds");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.HOTKotCheckTable", b =>
                {
                    b.Property<int>("AppKOTTableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AppKOTId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HotTabID")
                        .HasColumnType("INTEGER");

                    b.HasKey("AppKOTTableId");

                    b.HasIndex("AppKOTId");

                    b.HasIndex("HotTabID");

                    b.ToTable("HOTKotCheckTabless");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.HotBillAgainstKot", b =>
                {
                    b.Property<int>("HotBillKotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("HotBillId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HotKotId")
                        .HasColumnType("INTEGER");

                    b.HasKey("HotBillKotId");

                    b.HasIndex("HotBillId");

                    b.HasIndex("HotKotId");

                    b.ToTable("HotBillAgainstKots");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.HotBillItemDetail", b =>
                {
                    b.Property<int>("HotBillItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BarCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DetAmt")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DetDiscAmt")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DetDiscPer")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DetGrossAmt")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DetNetAmt")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DetRate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DetTaxAmt")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DetTaxPer")
                        .HasColumnType("TEXT");

                    b.Property<int>("HotBillId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Qty")
                        .HasColumnType("TEXT");

                    b.Property<int>("UnitId")
                        .HasColumnType("INTEGER");

                    b.HasKey("HotBillItemId");

                    b.HasIndex("HotBillId");

                    b.ToTable("HotBillItemDetail");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.HotBillMaster", b =>
                {
                    b.Property<int>("HotBillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AppMachineId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("B4roundAmt")
                        .HasColumnType("TEXT");

                    b.Property<int>("BearerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BranchId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CashierFound")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CounterId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomerMobile")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DiningSpaceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EnteredEmpId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("HotBillDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("HotBillItemTotal")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("HotBillNeTAmt")
                        .HasColumnType("TEXT");

                    b.Property<int>("HotBillNo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HotBillNotes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HotBillPrefix")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HotBillRefNo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("HotBillTaxTotal")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HotBillTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("HotBillType")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSynced")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoundNeed")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("RoundOffVal")
                        .HasColumnType("TEXT");

                    b.Property<int>("ServerHotBillId")
                        .HasColumnType("INTEGER");

                    b.HasKey("HotBillId");

                    b.ToTable("HotBillMasters");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.HotBillTaxDetail", b =>
                {
                    b.Property<int>("HotBillTaxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("HotBillId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TaXId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TaxAmt")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TaxPer")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TaxableAmt")
                        .HasColumnType("TEXT");

                    b.HasKey("HotBillTaxId");

                    b.HasIndex("HotBillId");

                    b.HasIndex("TaXId");

                    b.ToTable("HotBillTaxDetails");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.HotKOT", b =>
                {
                    b.Property<int>("HotKOTId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AppMachineID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BearerID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BranchID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CounterID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DiningSpaceID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EnteredEmpID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("HotKOTDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("HotKOTNo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HotKOTNotes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("HotKOTPrefix")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("HotKOTRefNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HotKOTTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("HotKOTType")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("HotKotAmt")
                        .HasPrecision(20, 3)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSynced")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NoOfGuests")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ServerKOTId")
                        .HasColumnType("INTEGER");

                    b.HasKey("HotKOTId");

                    b.ToTable("HotKOTMasters");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.HotKOTItemDetail", b =>
                {
                    b.Property<int>("AppKOTItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BarCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DetAmt")
                        .HasPrecision(20, 3)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DetDiscAmt")
                        .HasPrecision(20, 3)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DetDiscPer")
                        .HasPrecision(20, 3)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DetGrossAmt")
                        .HasPrecision(20, 3)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DetNetAmt")
                        .HasPrecision(20, 3)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DetRate")
                        .HasPrecision(20, 3)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DetTaxAmt")
                        .HasPrecision(20, 3)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DetTaxPer")
                        .HasPrecision(20, 3)
                        .HasColumnType("TEXT");

                    b.Property<int>("HotKOTId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HotKotItemNotes")
                        .IsRequired()
                        .HasMaxLength(900)
                        .HasColumnType("TEXT");

                    b.Property<int>("ItemID")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Qty")
                        .HasPrecision(20, 3)
                        .HasColumnType("TEXT");

                    b.Property<int>("UnitID")
                        .HasColumnType("INTEGER");

                    b.HasKey("AppKOTItemId");

                    b.HasIndex("HotKOTId");

                    b.ToTable("HotKOTItemDetails");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.HotKOTTable", b =>
                {
                    b.Property<int>("AppKOTTableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("HotKOTId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HotTabID")
                        .HasColumnType("INTEGER");

                    b.HasKey("AppKOTTableId");

                    b.HasIndex("HotKOTId")
                        .IsUnique();

                    b.HasIndex("HotTabID");

                    b.ToTable("HotKOTTables");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.Item", b =>
                {
                    b.Property<int>("itemId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MainItemId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("itemName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("itemRate")
                        .HasColumnType("TEXT");

                    b.Property<string>("picURL")
                        .HasColumnType("TEXT");

                    b.Property<int>("subCatId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("unitId")
                        .HasColumnType("INTEGER");

                    b.HasKey("itemId");

                    b.HasIndex("MainItemId");

                    b.HasIndex("subCatId");

                    b.HasIndex("unitId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.MainItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MainItemType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MainItems");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.StockInwardDetail", b =>
                {
                    b.Property<int>("StockInwardDetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BarItemId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("InwardQty")
                        .HasColumnType("TEXT");

                    b.Property<int>("StockInwardId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UnitId")
                        .HasColumnType("INTEGER");

                    b.HasKey("StockInwardDetId");

                    b.HasIndex("BarItemId");

                    b.HasIndex("StockInwardId");

                    b.HasIndex("UnitId");

                    b.ToTable("StockInwardDetails");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.StockInwardMaster", b =>
                {
                    b.Property<int>("StockInwardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BranchId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSynced")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LoginEmpId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SockInwardServerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StockInwardDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("StockInwardDocNo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StockInwardNotes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StockInwardPrefix")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StockInwardRefNo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StockInwardSlNo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StockInwardSqlDateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StockInwardTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("VendorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("StockInwardId");

                    b.HasIndex("BranchId");

                    b.HasIndex("VendorId");

                    b.ToTable("StockInwardMasters");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.StockTransfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BranchId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FromCounterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FromGodownId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FromType")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSynced")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RefNo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ServerTransferId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StkTrSlNo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ToCounterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ToGodownId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ToType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TransferDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TransferTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("StockTransfers");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.StockTransferItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MainBarItemId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("TEXT");

                    b.Property<int>("StkTrId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StockTransferLocalId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UnitId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StkTrId");

                    b.ToTable("StockTransferItems");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.SubCategory", b =>
                {
                    b.Property<int>("subCatId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("catId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("subCatName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("subCatId");

                    b.HasIndex("catId");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.SyncHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastSyncTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("SyncType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SyncHistories");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.Table", b =>
                {
                    b.Property<int>("tableId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("noOfSeats")
                        .HasColumnType("INTEGER");

                    b.Property<string>("tableName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("tableId");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.TableDiningSpace", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("branchId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("diningspaceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("tableId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("TablesDiningSpaces");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.TaxMaster", b =>
                {
                    b.Property<int>("TaxId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ApplicableType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TaxCalcId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TaxCode")
                        .HasColumnType("TEXT");

                    b.Property<int>("TaxGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TaxName")
                        .HasColumnType("TEXT");

                    b.HasKey("TaxId");

                    b.ToTable("TaxMasters");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.Unit", b =>
                {
                    b.Property<int>("unitId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("unitName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("unitId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.VWItemParentChild", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BarCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CatId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("categorycatId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("childItemId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("childItemcode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("childItemname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("itemtype")
                        .HasColumnType("INTEGER");

                    b.Property<int>("parentItemId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("parentItemcode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("parentItemname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("unitId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("categorycatId");

                    b.HasIndex("unitId");

                    b.ToTable("ItemParentChilds");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.VendorMaster", b =>
                {
                    b.Property<int>("VendorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("VendorCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VendorName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("VendorId");

                    b.ToTable("VendorMasters");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.BarItemStockCounter", b =>
                {
                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.BarItem", "BarItem")
                        .WithMany("BarItemStockCounters")
                        .HasForeignKey("BarItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.BillStation", "Counter")
                        .WithMany()
                        .HasForeignKey("CounterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BarItem");

                    b.Navigation("Counter");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.BarItemStockGodown", b =>
                {
                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.BarItem", "BarItem")
                        .WithMany("BarItemGodownStocks")
                        .HasForeignKey("BarItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BarItem");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.BillCashier", b =>
                {
                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.HotBillMaster", "HotBill")
                        .WithMany("BillCashiers")
                        .HasForeignKey("HotBillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HotBill");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.BillItem", b =>
                {
                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.Category", "category")
                        .WithMany()
                        .HasForeignKey("categorycatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.BillItemUnit", b =>
                {
                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.BillItem", "Item")
                        .WithMany("ItemUnits")
                        .HasForeignKey("itemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("unitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.BillStation", b =>
                {
                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.BranchMaster", "Branch")
                        .WithMany()
                        .HasForeignKey("branchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.BranchTaxSetting", b =>
                {
                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.BranchMaster", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.DiningSpaceItemRate", b =>
                {
                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.DiningSpace", "diningSpace")
                        .WithMany()
                        .HasForeignKey("diningSpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.BillItem", "item")
                        .WithMany("DiningSpaceItemRates")
                        .HasForeignKey("itemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("diningSpace");

                    b.Navigation("item");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.HOTKotBilled", b =>
                {
                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.HotKOT", "HotKOTMaster")
                        .WithMany("Billed")
                        .HasForeignKey("HotKOTId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HotKOTMaster");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.HOTKotCheckTable", b =>
                {
                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.HotKOT", "HotKOTMaster")
                        .WithMany()
                        .HasForeignKey("AppKOTId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.Table", "Tables")
                        .WithMany("HotKOTTablesCheck")
                        .HasForeignKey("HotTabID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HotKOTMaster");

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.HotBillAgainstKot", b =>
                {
                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.HotBillMaster", "HotBill")
                        .WithMany("HotBillAgainstKots")
                        .HasForeignKey("HotBillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.HotKOT", "HotKot")
                        .WithMany("HotBillAgainstKots")
                        .HasForeignKey("HotKotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HotBill");

                    b.Navigation("HotKot");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.HotBillItemDetail", b =>
                {
                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.HotBillMaster", "HotBill")
                        .WithMany("HotBillItemDetails")
                        .HasForeignKey("HotBillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HotBill");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.HotBillTaxDetail", b =>
                {
                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.HotBillMaster", "HotBill")
                        .WithMany("HotBillTaxDetails")
                        .HasForeignKey("HotBillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.TaxMaster", "TaX")
                        .WithMany()
                        .HasForeignKey("TaXId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HotBill");

                    b.Navigation("TaX");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.HotKOTItemDetail", b =>
                {
                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.HotKOT", "HotKOTMaster")
                        .WithMany("Items")
                        .HasForeignKey("HotKOTId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HotKOTMaster");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.HotKOTTable", b =>
                {
                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.HotKOT", "HotKOTMaster")
                        .WithOne("Tables")
                        .HasForeignKey("MAUIBLAZORHYBRID.Data.Data.HotKOTTable", "HotKOTId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.Table", "Tables")
                        .WithMany("HotKOTTables")
                        .HasForeignKey("HotTabID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HotKOTMaster");

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.Item", b =>
                {
                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.MainItem", "MainItem")
                        .WithMany("Items")
                        .HasForeignKey("MainItemId");

                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.SubCategory", "SubCategory")
                        .WithMany("Items")
                        .HasForeignKey("subCatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("unitId");

                    b.Navigation("MainItem");

                    b.Navigation("SubCategory");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.StockInwardDetail", b =>
                {
                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.BillItem", "BarItem")
                        .WithMany()
                        .HasForeignKey("BarItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.StockInwardMaster", "StockInward")
                        .WithMany("StockInwardDetails")
                        .HasForeignKey("StockInwardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BarItem");

                    b.Navigation("StockInward");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.StockInwardMaster", b =>
                {
                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.BranchMaster", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.VendorMaster", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.StockTransferItem", b =>
                {
                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.StockTransfer", "StkTr")
                        .WithMany("StockTransferDetails")
                        .HasForeignKey("StkTrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StkTr");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.SubCategory", b =>
                {
                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("catId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.VWItemParentChild", b =>
                {
                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.Category", "category")
                        .WithMany()
                        .HasForeignKey("categorycatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MAUIBLAZORHYBRID.Data.Data.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("unitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");

                    b.Navigation("category");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.BarItem", b =>
                {
                    b.Navigation("BarItemGodownStocks");

                    b.Navigation("BarItemStockCounters");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.BillItem", b =>
                {
                    b.Navigation("DiningSpaceItemRates");

                    b.Navigation("ItemUnits");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.HotBillMaster", b =>
                {
                    b.Navigation("BillCashiers");

                    b.Navigation("HotBillAgainstKots");

                    b.Navigation("HotBillItemDetails");

                    b.Navigation("HotBillTaxDetails");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.HotKOT", b =>
                {
                    b.Navigation("Billed");

                    b.Navigation("HotBillAgainstKots");

                    b.Navigation("Items");

                    b.Navigation("Tables")
                        .IsRequired();
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.MainItem", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.StockInwardMaster", b =>
                {
                    b.Navigation("StockInwardDetails");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.StockTransfer", b =>
                {
                    b.Navigation("StockTransferDetails");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.SubCategory", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("MAUIBLAZORHYBRID.Data.Data.Table", b =>
                {
                    b.Navigation("HotKOTTables");

                    b.Navigation("HotKOTTablesCheck");
                });
#pragma warning restore 612, 618
        }
    }
}
